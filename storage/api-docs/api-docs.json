{
    "openapi": "3.0.0",
    "info": {
        "title": "SpaceArt API",
        "version": "2.0.0"
    },
    "servers": [
        {
            "url": "http://api-spaceart.local/api/"
        }
    ],
    "paths": {
        "/user": {
            "get": {
                "tags": [
                    "/user"
                ],
                "summary": "List active users",
                "description": "Get users on database and paginate them",
                "operationId": "23679253d16f34d2972249751e3631dd",
                "parameters": [
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Limit per page",
                        "style": "form",
                        "schema": {
                            "type": "integer",
                            "nullable": true
                        }
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "Offset for search",
                        "style": "form",
                        "schema": {
                            "type": "integer",
                            "nullable": true
                        }
                    },
                    {
                        "name": "start_with",
                        "in": "query",
                        "description": "User's name start with",
                        "style": "form",
                        "schema": {
                            "type": "string",
                            "nullable": true
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Users found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "default": "Users found"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/User"
                                            }
                                        },
                                        "fails": {
                                            "type": "boolean",
                                            "default": "false"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "$ref": "#/components/responses/500"
                    }
                }
            },
            "post": {
                "tags": [
                    "/user"
                ],
                "summary": "Store user",
                "description": "Store user on database",
                "operationId": "ce3cf31668a69eb39e5e98738715afa1",
                "requestBody": {
                    "$ref": "#/components/requestBodies/UserStore"
                },
                "responses": {
                    "201": {
                        "description": "User was created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "default": "User created"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/User"
                                            }
                                        },
                                        "fails": {
                                            "type": "boolean"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#/components/responses/422"
                    },
                    "500": {
                        "$ref": "#/components/responses/500"
                    }
                }
            }
        },
        "/user/{id}": {
            "get": {
                "tags": [
                    "/user"
                ],
                "summary": "Show user",
                "description": "Get an unique user on database",
                "operationId": "1ec60d4ee968175164a94c21f897f8ea",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "User id",
                        "style": "form",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "default": "User {id} found"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/User"
                                        },
                                        "fails": {
                                            "type": "boolean"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#/components/responses/422"
                    },
                    "500": {
                        "$ref": "#/components/responses/500"
                    }
                }
            },
            "put": {
                "tags": [
                    "/user"
                ],
                "summary": "Update user",
                "description": "Update user, artist or enterprise data on database",
                "operationId": "786a794071cb7098f55a4a4911e7d3f0",
                "requestBody": {
                    "$ref": "#/components/requestBodies/UserUpdate"
                },
                "responses": {
                    "200": {
                        "description": "User was updated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "default": "User was updated"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/User"
                                            }
                                        },
                                        "fails": {
                                            "type": "boolean"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#/components/responses/422"
                    },
                    "500": {
                        "$ref": "#/components/responses/500"
                    }
                },
                "security": [
                    {
                        "$ref": "#/components/securitySchemes/Sanctum"
                    }
                ]
            },
            "delete": {
                "tags": [
                    "/user"
                ],
                "summary": "Disable user account",
                "description": "Disable access to user account",
                "operationId": "a56b12a3694a926699892056cdcf8a9e",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "User id",
                        "style": "form",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User was disabled",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "default": "User was disabled"
                                        },
                                        "fails": {
                                            "type": "boolean"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "$ref": "#/components/responses/500"
                    }
                },
                "security": [
                    {
                        "$ref": "#/components/securitySchemes/Sanctum"
                    }
                ]
            }
        },
        "/user/{id}/update": {
            "post": {
                "tags": [
                    "/user"
                ],
                "summary": "[PUT]::/user/{id} alias",
                "description": "Alternative route to [PUT]::/user/{id}",
                "operationId": "9b143dc285908601878cfa00acfb15f5",
                "responses": {
                    "302": {
                        "description": "Redirected to [PUT]::/user/{id}"
                    }
                },
                "security": [
                    {
                        "$ref": "#/components/securitySchemes/Sanctum"
                    }
                ]
            }
        },
        "/user/{id}/delete": {
            "post": {
                "tags": [
                    "/user"
                ],
                "summary": "[DELETE]::/user/{id} alias",
                "description": "Alternative route to [DELETE]::/user/{id}",
                "operationId": "3076d808c7bfb8d9643c2f811f46b757",
                "responses": {
                    "200": {
                        "description": "Redirected to [DELETE]::/user/{id}"
                    }
                },
                "security": [
                    {
                        "$ref": "#/components/securitySchemes/Sanctum"
                    }
                ]
            }
        }
    },
    "components": {
        "schemas": {
            "ArtistStoreBody": {
                "required": [
                    "cpf",
                    "birthday",
                    "art",
                    "wage"
                ],
                "properties": {
                    "cpf": {
                        "type": "string",
                        "pattern": "^\\d{11}$",
                        "example": "01499146000196"
                    },
                    "birthday": {
                        "type": "string",
                        "format": "d/m/Y",
                        "example": "01/01/1970"
                    },
                    "art": {
                        "enum": [
                            "acting",
                            "dance",
                            "music",
                            "painting",
                            "sculpture"
                        ],
                        "example": "music"
                    },
                    "wage": {
                        "type": "number",
                        "example": "100"
                    }
                },
                "type": "object"
            },
            "ArtistUpdateBody": {
                "properties": {
                    "art": {
                        "enum": [
                            "acting",
                            "dance",
                            "music",
                            "painting",
                            "sculpture"
                        ],
                        "example": "music"
                    },
                    "wage": {
                        "type": "number",
                        "example": "100"
                    }
                },
                "type": "object"
            },
            "EnterpriseStoreBody": {
                "required": [
                    "cnpj",
                    "company_name",
                    "address_complement"
                ],
                "properties": {
                    "cnpj": {
                        "type": "string",
                        "pattern": "^\\d{14}$",
                        "example": "40033796599"
                    },
                    "company_name": {
                        "type": "string",
                        "minLength": 3,
                        "example": "José e Gabriela Esportes ME"
                    },
                    "address_complement": {
                        "type": "string",
                        "example": "Beside of SESI Saúde"
                    }
                },
                "type": "object"
            },
            "EnterpriseUpdateBody": {
                "properties": {
                    "company_name": {
                        "type": "string",
                        "minLength": 3,
                        "example": "José e Gabriela Esportes ME"
                    },
                    "address_complement": {
                        "type": "string",
                        "example": "Beside of SESI Saúde"
                    }
                },
                "type": "object"
            },
            "Agreement": {
                "description": "Schema of Model Agreement",
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "enterprise": {
                        "$ref": "#/components/schemas/User"
                    },
                    "artist": {
                        "$ref": "#/components/schemas/User"
                    },
                    "art": {
                        "$ref": "#/components/schemas/Art"
                    },
                    "note": {
                        "description": "Description of service",
                        "type": "string",
                        "example": "Rock musical show for 2 hours"
                    },
                    "date": {
                        "description": "Day of service",
                        "type": "string",
                        "format": "date",
                        "example": "01/01/2025"
                    },
                    "start_time": {
                        "description": "Hour of service",
                        "type": "string",
                        "format": "date",
                        "example": "18:30"
                    },
                    "end_time": {
                        "description": "Hour of finish service",
                        "type": "string",
                        "format": "date",
                        "example": "20:30"
                    }
                },
                "type": "object"
            },
            "Art": {
                "description": "Schema of Model Art",
                "properties": {
                    "name": {
                        "type": "string",
                        "example": "music"
                    }
                },
                "type": "object"
            },
            "Artist": {
                "description": "Schema of Model Artist User",
                "properties": {
                    "cpf": {
                        "type": "string",
                        "example": "40033796599"
                    },
                    "bithday": {
                        "type": "string",
                        "format": "date",
                        "example": "01/01/1970"
                    },
                    "wage": {
                        "type": "number",
                        "example": "100"
                    },
                    "art_id": {
                        "$ref": "#/components/schemas/Art"
                    }
                },
                "type": "object"
            },
            "Enterprise": {
                "description": "Schema of Model Enterprise User",
                "properties": {
                    "cnpj": {
                        "type": "string",
                        "example": "01499146000196"
                    },
                    "company_name": {
                        "type": "string",
                        "example": "José e Gabriela Esportes ME"
                    },
                    "agreements": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Agreement"
                        }
                    },
                    "selectives": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Selective"
                        }
                    }
                },
                "type": "object"
            },
            "Post": {
                "description": "Schema of Model Post",
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "user": {
                        "$ref": "#/components/schemas/User"
                    },
                    "text": {
                        "description": "Text",
                        "type": "string",
                        "example": "Today i show me in Atlantic Resort"
                    },
                    "image": {
                        "description": "Image in base64 or url",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "Rate": {
                "description": "Schema of Model Rate",
                "properties": {
                    "author": {
                        "$ref": "#/components/schemas/User"
                    },
                    "rated": {
                        "$ref": "#/components/schemas/User"
                    },
                    "agreement": {
                        "$ref": "#/components/schemas/Agreement"
                    },
                    "score": {
                        "type": "number",
                        "format": "float",
                        "maximum": 5,
                        "minimum": 0,
                        "example": "4.5"
                    },
                    "note": {
                        "description": "Short review",
                        "type": "string",
                        "example": "The artist is very helpful"
                    }
                },
                "type": "object"
            },
            "Selective": {
                "description": "Schema of Model Selective",
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "enterprise": {
                        "$ref": "#/components/schemas/Enterprise"
                    },
                    "art": {
                        "$ref": "#/components/schemas/Art"
                    },
                    "title": {
                        "description": "Comercial name of selective",
                        "type": "string",
                        "example": "Summer 2024's selective"
                    },
                    "note": {
                        "description": "Description of service",
                        "type": "string",
                        "example": "Rock musical show for 2 hours"
                    },
                    "start_moment": {
                        "description": "Moment of open selective",
                        "type": "string",
                        "format": "date",
                        "example": "01/01/2025 00:00"
                    },
                    "end_moment": {
                        "description": "Moment of open selective",
                        "type": "string",
                        "format": "date",
                        "example": "31/12/2025 23:59"
                    },
                    "price": {
                        "description": "Value of fee",
                        "type": "number",
                        "format": "float",
                        "example": "1000.00"
                    },
                    "candidates": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/SelectiveCandidate"
                        }
                    }
                },
                "type": "object"
            },
            "SelectiveCandidate": {
                "description": "Schema of Selective Candidate",
                "properties": {
                    "artist": {
                        "$ref": "#/components/schemas/User"
                    },
                    "selective": {
                        "$ref": "#/components/schemas/Selective"
                    }
                },
                "type": "object"
            },
            "User": {
                "description": "Schema of Model User",
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": "1"
                    },
                    "name": {
                        "description": "Username",
                        "type": "string",
                        "example": "José Carlos"
                    },
                    "active": {
                        "description": "Access to account is enabled",
                        "type": "boolean",
                        "default": "true"
                    },
                    "email": {
                        "description": "Access email address",
                        "type": "string",
                        "example": "example@org.net"
                    },
                    "phone": {
                        "description": "User's mobile number",
                        "type": "string",
                        "example": "71988469787"
                    },
                    "password": {
                        "type": "string",
                        "example": "<FO<k2&K83.;<RAeiC?@"
                    },
                    "type": {
                        "description": "Account type",
                        "enum": [
                            "artist",
                            "enterprise"
                        ]
                    },
                    "postal_code": {
                        "description": "Brazilian zip code",
                        "type": "string",
                        "example": "41000000"
                    },
                    "state": {
                        "description": "Brazilian state acronym",
                        "type": "string",
                        "example": "BA"
                    },
                    "city": {
                        "type": "string",
                        "example": "Salvador"
                    },
                    "neighborhood": {
                        "type": "string",
                        "example": "Piatã"
                    },
                    "street": {
                        "type": "string",
                        "example": "Av. Orlando Gomes"
                    },
                    "address_complement": {
                        "description": "Additional  information of address",
                        "type": "string",
                        "example": "Beside of SESI Saúde"
                    },
                    "image": {
                        "description": "Image in base64 or URL",
                        "type": "string"
                    },
                    "slug": {
                        "description": "User's website address",
                        "type": "string",
                        "example": "https://spaceart-lemon.vercel.app/user/2"
                    },
                    "biography": {
                        "description": "Short presentation text",
                        "type": "string"
                    },
                    "received_rates_avg_score": {
                        "type": "number",
                        "format": "float"
                    },
                    "artist_account_data": {
                        "$ref": "#/components/schemas/Artist"
                    },
                    "enterprise_account_data": {
                        "$ref": "#/components/schemas/Enterprise"
                    },
                    "sent_rates": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Rate"
                        }
                    },
                    "received_rates": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Rate"
                        }
                    },
                    "posts": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Post"
                        }
                    }
                },
                "type": "object"
            }
        },
        "responses": {
            "500": {
                "description": "Unexpected error",
                "content": {
                    "application/json": {
                        "schema": {
                            "properties": {
                                "fails": {
                                    "type": "boolean"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            },
            "422": {
                "description": "Expected interruption",
                "content": {
                    "application/json": {
                        "schema": {
                            "properties": {
                                "message": {
                                    "type": "string"
                                },
                                "data": {
                                    "type": "array",
                                    "items": {
                                        "minItems": 1
                                    }
                                },
                                "fails": {
                                    "type": "boolean"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            }
        },
        "requestBodies": {
            "UserStore": {
                "content": {
                    "application/json": {
                        "schema": {
                            "required": [
                                "name",
                                "email",
                                "phone",
                                "password",
                                "type",
                                "postal_code",
                                "image"
                            ],
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "maxLength": 30,
                                    "minLength": 3,
                                    "example": "José Carlos"
                                },
                                "email": {
                                    "type": "string",
                                    "example": "example@org.net"
                                },
                                "phone": {
                                    "type": "string",
                                    "example": "71988469787"
                                },
                                "password": {
                                    "type": "string",
                                    "minLength": 8,
                                    "example": "<FO<k2&K83.;<RAeiC?@"
                                },
                                "type": {
                                    "type": "enterprise",
                                    "enum": [
                                        "artist",
                                        "enterprise"
                                    ]
                                },
                                "postal_code": {
                                    "type": "string",
                                    "example": "41000000"
                                },
                                "image": {
                                    "type": "string",
                                    "maxLength": 10000000
                                }
                            },
                            "type": "object",
                            "oneOf": [
                                {
                                    "$ref": "#/components/schemas/ArtistStoreBody"
                                },
                                {
                                    "$ref": "#/components/schemas/EnterpriseStoreBody"
                                }
                            ]
                        }
                    }
                }
            },
            "UserUpdate": {
                "content": {
                    "application/json": {
                        "schema": {
                            "required": [
                                "type"
                            ],
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "maxLength": 30,
                                    "minLength": 3
                                },
                                "email": {
                                    "type": "string"
                                },
                                "phone": {
                                    "type": "string",
                                    "maxLength": 11,
                                    "minLength": 11
                                },
                                "password": {
                                    "type": "string",
                                    "minLength": 8
                                },
                                "type": {
                                    "enum": [
                                        "artist",
                                        "enterprise"
                                    ]
                                },
                                "image": {
                                    "type": "string",
                                    "maxLength": 10000000
                                },
                                "postal_code": {
                                    "type": "string"
                                },
                                "address": {
                                    "type": "string"
                                },
                                "slug": {
                                    "description": "uri",
                                    "type": "string"
                                }
                            },
                            "type": "object",
                            "oneOf": [
                                {
                                    "$ref": "#/components/schemas/ArtistUpdateBody"
                                },
                                {
                                    "$ref": "#/components/schemas/EnterpriseUpdateBody"
                                }
                            ]
                        }
                    }
                }
            }
        },
        "securitySchemes": {
            "Sanctum": {
                "type": "apiKey",
                "scheme": {
                    "bearerToken": []
                }
            }
        }
    }
}